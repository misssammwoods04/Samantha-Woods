{
  "hash": "6ce871e66b5fd4e0c39cff9d68dfe7c6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Code\"\ndescription: A sample of code from my Environmental Statistics class\nformat: html\nimage: code.gif\ncategories: Coding \n---\n\n\n\nThis is a sample of my code from my personal data project for my Environmental Statistics class! I coded a plot of my data to show if there is any correlation between my hours of sleep (predictor variable) and my stress level (response variable). \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(ggplot2)\nlibrary(here)\n\n# read in packages \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_data <- read.csv(here(\"posts\", \"code\", \"Personal_Data.csv\"))\n\nclean_p_data <- p_data |> # create new data frame\n  clean_names() # standardizes column names - spaces = underscores, make everything lowercase\n\nclean_p_data <- clean_p_data |> \n  mutate(amount_of_sleep = str_trim(amount_of_sleep),  # remove inconsistencies among group names \n         amount_of_sleep = str_to_lower(amount_of_sleep))    # make lowercase if needed\n\nclean_p_data <- clean_p_data |>  # modify data frame\n  mutate(amount_of_sleep = fct_relevel(amount_of_sleep, \n                                       \"5 hrs\", \"6 hrs\", \"7 hrs\", \n                                       \"8 hrs\", \"9 hrs\", \"10 hrs\")) # reorder data so that it is represented in numerical order\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = clean_p_data, # data frame\naes(x = amount_of_sleep, # make x-axis = amount of sleep\ny = stress_level, # make y-axis = stress level \ncolor = amount_of_sleep)) + # color \ngeom_jitter() +# jitterplot \n  \nlabs(\n  title = \"Sleep vs. Stress Levels\", # change title\n  x = \"Hours of Sleep\", # change name of x axis\n  y = \"Stress Level\", # change name of y axis\n  color = \"Amount of Sleep\") # change name of legend \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/graph-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}