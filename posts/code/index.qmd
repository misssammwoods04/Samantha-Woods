---
title: "Code"
description: A sample of code from my Environmental Statistics class
format: html
image: code.gif
categories: Coding 
---

This is a sample of my code from my personal data project for my Environmental Statistics class! I coded a plot of my data to show if there is any correlation between my hours of sleep (predictor variable) and my stress level (response variable). 



```{r setup, message=FALSE, warning=FALSE}
library(tidyverse)
library(janitor)
library(ggplot2)
library(here)
library(DHARMa)
library(ggeffects)
# read in packages 

```

```{r clean data, message=FALSE, warning=FALSE}

p_data <- read.csv(here("posts", "code", "Personal_Data.csv"))

clean_p_data <- p_data |> # create new data frame
  clean_names() # standardizes column names - spaces = underscores, make everything lowercase

clean_p_data <- clean_p_data |> 
  mutate(amount_of_sleep = str_trim(amount_of_sleep),  # remove inconsistencies among group names 
         amount_of_sleep = str_to_lower(amount_of_sleep))    # make lowercase if needed

clean_p_data <- clean_p_data |>  # modify data frame
  mutate(amount_of_sleep = fct_relevel(amount_of_sleep, 
                                       "5 hrs", "6 hrs", "7 hrs", 
                                       "8 hrs", "9 hrs", "10 hrs")) # reorder data so that it is represented in numerical order
```

```{r graph, message=FALSE, warning=FALSE}
ggplot(data = clean_p_data, # data frame
aes(x = amount_of_sleep, # make x-axis = amount of sleep
y = stress_level, # make y-axis = stress level 
color = amount_of_sleep)) + # color 
geom_point() +# jitterplot 
  
labs(
  title = "Sleep vs. Stress Levels", # change title
  x = "Hours of Sleep", # change name of x axis
  y = "Stress Level", # change name of y axis
  color = "Amount of Sleep") # change name of legend 

```


```{r}
ggplot(clean_p_data, 
      aes(x = leave_iv_campus_home, y = stress_level, color = leave_iv_campus_home)) +
  geom_boxplot(outlier.shape = NA, alpha = 0.3, color = "orange") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  labs(title = "Stress Level by Leaving Campus", 
       x = "Did I Leave Campus?", 
       y = "Stress Level", 
       color = "Left Campus?") +
  theme_minimal()
```


```{r}

clean_p_data <- clean_p_data |>
  mutate(leave_iv_campus_home = as.factor(leave_iv_campus_home))

p_mod <- glm(leave_iv_campus_home ~ stress_level,
             data = clean_p_data,
             family = "binomial")

plot(
  simulateResiduals(p_mod)
)

summary(p_mod)

gtsummary::tbl_regression(p_mod,
                          exponentiate = TRUE)

ggpredict (p_mod,
           terms = "stress_level [4]")

ggpredict(p_mod,
          terms = "stress_level [5]")

ggpredict(p_mod,
          terms = "stress_level [6]")
```


